/* Library for manage square_root_finder management */

#include "xil_io.h" /* Xilinx library for pointer functions */

/* Global registers declaration */
#define SQUARE_ROOT_FINDER_IP_OFFSET_INPUT_VALUE 0x80000000
#define SQUARE_ROOT_FINDER_IP_OFFSET_CONTROL_REGISTER 0x80000004
#define SQUARE_ROOT_FINDER_IP_OFFSET_STATUS_REGISTER 0x80000008
#define SQUARE_ROOT_FINDER_IP_OFFSET_OUTPUT_VALUE 0x8000000c

/* Detail register declaration */
#define  SQUARE_ROOT_FINDER_IP_CONTROL_START 0x00000001
#define  SQUARE_ROOT_FINDER_IP_STATUS_END 0x00000001
#define  SQUARE_ROOT_FINDER_IP_STATUS_END_SHIFT 0
#define  SQUARE_ROOT_FINDER_IP_STATUS_RUN 0x00000002
#define  SQUARE_ROOT_FINDER_IP_STATUS_RUN_SHIFT 1
#define  SQUARE_ROOT_FINDER_IP_STATUS_ERR 0x00000004
#define  SQUARE_ROOT_FINDER_IP_STATUS_ERR_SHIFT 2

/* Management macros */
#define square_root_write_value(x) Xil_Out32(SQUARE_ROOT_FINDER_IP_OFFSET_INPUT_VALUE, x)
#define square_root_start() Xil_Out32(SQUARE_ROOT_FINDER_IP_OFFSET_CONTROL_REGISTER, 1)

#define square_root_read_end() (Xil_in32(SQUARE_ROOT_FINDER_IP_OFFSET_STATUS_REGISTER)>>SQUARE_ROOT_FINDER_IP_STATUS_END_SHIFT) & 0x1
#define square_root_read_end() (Xil_in32(SQUARE_ROOT_FINDER_IP_OFFSET_STATUS_REGISTER)>>SQUARE_ROOT_FINDER_IP_STATUS_RUN_SHIFT) & 0x1
#define square_root_read_end() (Xil_in32(SQUARE_ROOT_FINDER_IP_OFFSET_STATUS_REGISTER)>>SQUARE_ROOT_FINDER_IP_STATUS_ERR_SHIFT) & 0x1

#define square_root_read_value() (Xil_in32(SQUARE_ROOT_FINDER_IP_OFFSET_OUTPUT_VALUE))
