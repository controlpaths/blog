// -------------------------------------------------------------
// 
// File Name: hdl_prj/hdlsrc/model/axis_goertzel_ip_axi4_stream_slave.v
// Created: 2021-03-17 20:02:41
// 
// Generated by MATLAB 9.9 and HDL Coder 3.17
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: axis_goertzel_ip_axi4_stream_slave
// Source Path: axis_goertzel_ip/axis_goertzel_ip_axi4_stream_slave
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module axis_goertzel_ip_axi4_stream_slave
          (clk,
           reset,
           enb,
           AXI4_Stream_Slave_TDATA,
           AXI4_Stream_Slave_TVALID,
           auto_ready,
           AXI4_Stream_Slave_TREADY,
           user_data,
           user_valid);


  input   clk;
  input   reset;
  input   enb;
  input   [31:0] AXI4_Stream_Slave_TDATA;  // ufix32
  input   AXI4_Stream_Slave_TVALID;  // ufix1
  input   auto_ready;  // ufix1
  output  AXI4_Stream_Slave_TREADY;  // ufix1
  output  [31:0] user_data;  // ufix32
  output  user_valid;  // ufix1


  reg  fifo_rd_ack;  // ufix1
  wire [31:0] stream_in_user_data;  // ufix32
  wire fifo_empty;  // ufix1
  wire fifo_full;  // ufix1
  wire fifo_empty_neg;  // ufix1
  wire stream_in_user_valid;  // ufix1


  always @(posedge clk or posedge reset)
    begin : intdelay_process
      if (reset == 1'b1) begin
        fifo_rd_ack <= 1'b0;
      end
      else begin
        if (enb) begin
          fifo_rd_ack <= auto_ready;
        end
      end
    end



  axis_goertzel_ip_fifo_data u_axis_goertzel_ip_fifo_data_inst (.clk(clk),
                                                                .reset(reset),
                                                                .enb(enb),
                                                                .In(AXI4_Stream_Slave_TDATA),  // ufix32
                                                                .Push(AXI4_Stream_Slave_TVALID),  // ufix1
                                                                .Pop(fifo_rd_ack),  // ufix1
                                                                .Out(stream_in_user_data),  // ufix32
                                                                .Empty(fifo_empty),  // ufix1
                                                                .Full(fifo_full)  // ufix1
                                                                );

  assign AXI4_Stream_Slave_TREADY =  ~ fifo_full;



  assign user_data = stream_in_user_data;

  assign fifo_empty_neg =  ~ fifo_empty;



  assign stream_in_user_valid = fifo_empty_neg & fifo_rd_ack;



  assign user_valid = stream_in_user_valid;

endmodule  // axis_goertzel_ip_axi4_stream_slave

