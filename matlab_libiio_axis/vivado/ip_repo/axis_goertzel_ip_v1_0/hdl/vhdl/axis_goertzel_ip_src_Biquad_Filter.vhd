-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/model_biquad_wfa/axis_goertzel_ip_src_Biquad_Filter.vhd
-- Created: 2021-03-26 18:29:33
-- 
-- Generated by MATLAB 9.9 and HDL Coder 3.17
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: axis_goertzel_ip_src_Biquad_Filter
-- Source Path: model_biquad_wfa/goertzel_ip/Subsystem/Biquad Filter
-- Hierarchy Level: 3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.axis_goertzel_ip_src_model_biquad_wfa_pkg.ALL;

ENTITY axis_goertzel_ip_src_Biquad_Filter IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        Biquad_Filter_in                  :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En16
        Biquad_Filter_num                 :   IN    vector_of_std_logic_vector32(0 TO 2);  -- sfix32_En16 [3]
        Biquad_Filter_den                 :   IN    vector_of_std_logic_vector32(0 TO 1);  -- sfix32_En16 [2]
        Biquad_Filter_out                 :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En16
        );
END axis_goertzel_ip_src_Biquad_Filter;


ARCHITECTURE rtl OF axis_goertzel_ip_src_Biquad_Filter IS

  -- Signals
  SIGNAL Biquad_Filter_in_signed          : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL Biquad_Filter_num_1              : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL multiplier_mul_temp              : signed(63 DOWNTO 0);  -- sfix64_En32
  SIGNAL b2mul1                           : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL Biquad_Filter_num_2              : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL multiplier_mul_temp_1            : signed(63 DOWNTO 0);  -- sfix64_En32
  SIGNAL b3mul1                           : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL Biquad_Filter_den_1              : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL Biquad_Filter_den_0              : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL Biquad_Filter_num_0              : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL multiplier_mul_temp_2            : signed(63 DOWNTO 0);  -- sfix64_En32
  SIGNAL b1mul1                           : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL ab1sum1                          : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL multiplier_mul_temp_3            : signed(63 DOWNTO 0);  -- sfix64_En32
  SIGNAL a2mul1                           : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL multiplier_mul_temp_4            : signed(63 DOWNTO 0);  -- sfix64_En32
  SIGNAL a3mul1                           : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL Sub_sub_cast                     : signed(32 DOWNTO 0);  -- sfix33_En16
  SIGNAL Sub_sub_cast_1                   : signed(32 DOWNTO 0);  -- sfix33_En16
  SIGNAL ab3sum1_temp                     : signed(32 DOWNTO 0);  -- sfix33_En16
  SIGNAL ab3sum1                          : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL delay2_section1                  : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL b2sum1                           : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL Sub_sub_cast_2                   : signed(32 DOWNTO 0);  -- sfix33_En16
  SIGNAL Sub_sub_cast_3                   : signed(32 DOWNTO 0);  -- sfix33_En16
  SIGNAL ab2sum1_temp                     : signed(32 DOWNTO 0);  -- sfix33_En16
  SIGNAL ab2sum1                          : signed(31 DOWNTO 0);  -- sfix32_En16
  SIGNAL delay1_section1                  : signed(31 DOWNTO 0);  -- sfix32_En16

BEGIN
  Biquad_Filter_in_signed <= signed(Biquad_Filter_in);

  Biquad_Filter_num_1 <= signed(Biquad_Filter_num(1));

  multiplier_mul_temp <= Biquad_Filter_in_signed * Biquad_Filter_num_1;
  b2mul1 <= multiplier_mul_temp(47 DOWNTO 16);

  Biquad_Filter_num_2 <= signed(Biquad_Filter_num(2));

  multiplier_mul_temp_1 <= Biquad_Filter_in_signed * Biquad_Filter_num_2;
  b3mul1 <= multiplier_mul_temp_1(47 DOWNTO 16);

  Biquad_Filter_den_1 <= signed(Biquad_Filter_den(1));

  Biquad_Filter_den_0 <= signed(Biquad_Filter_den(0));

  Biquad_Filter_num_0 <= signed(Biquad_Filter_num(0));

  multiplier_mul_temp_2 <= Biquad_Filter_in_signed * Biquad_Filter_num_0;
  b1mul1 <= multiplier_mul_temp_2(47 DOWNTO 16);

  multiplier_mul_temp_3 <= ab1sum1 * Biquad_Filter_den_0;
  a2mul1 <= multiplier_mul_temp_3(47 DOWNTO 16);

  multiplier_mul_temp_4 <= ab1sum1 * Biquad_Filter_den_1;
  a3mul1 <= multiplier_mul_temp_4(47 DOWNTO 16);

  Sub_sub_cast <= resize(b3mul1, 33);
  Sub_sub_cast_1 <= resize(a3mul1, 33);
  ab3sum1_temp <= Sub_sub_cast - Sub_sub_cast_1;

  ab3sum1 <= ab3sum1_temp(31 DOWNTO 0);

  delay_process_section1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay2_section1 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        delay2_section1 <= ab3sum1;
      END IF;
    END IF;
  END PROCESS delay_process_section1_process;


  b2sum1 <= b2mul1 + delay2_section1;

  Sub_sub_cast_2 <= resize(b2sum1, 33);
  Sub_sub_cast_3 <= resize(a2mul1, 33);
  ab2sum1_temp <= Sub_sub_cast_2 - Sub_sub_cast_3;

  ab2sum1 <= ab2sum1_temp(31 DOWNTO 0);

  delay_process_section1_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay1_section1 <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        delay1_section1 <= ab2sum1;
      END IF;
    END IF;
  END PROCESS delay_process_section1_1_process;


  ab1sum1 <= delay1_section1 + b1mul1;

  Biquad_Filter_out <= std_logic_vector(ab1sum1);

END rtl;

